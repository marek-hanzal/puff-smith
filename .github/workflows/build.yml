name: Build

on:
    push:
#        tags:
#            - 'v*.*.*'

jobs:
    #    build:
    #        runs-on: ubuntu-latest
    #        outputs:
    #            version: ${{ steps.prepare.outputs.version }}
    #        steps:
    #            -   name: Cancel previous jobs
    #                uses: styfle/cancel-workflow-action@0.9.1
    #                with:
    #                    access_token: ${{ github.token }}
    #
    #            -   name: Check out the repo
    #                uses: actions/checkout@master
    #
    #            -   name: Repository metadata
    #                uses: actions/github-script@master
    #                with:
    #                    script: |
    #                        const repository = await github.repos.get(context.repo)
    #                        return repository.data
    #
    #            -   name: Prepare
    #                id: prepare
    #                run: |
    #                    DOCKER_IMAGE=marekhanzal/puff-smith
    #                    VERSION=noop
    #                    if [ "${{ github.event_name }}" = "schedule" ]; then
    #                      VERSION=nightly
    #                    elif [[ $GITHUB_REF == refs/tags/* ]]; then
    #                      VERSION=${GITHUB_REF#refs/tags/}
    #                    elif [[ $GITHUB_REF == refs/heads/* ]]; then
    #                      VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
    #                      if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
    #                        VERSION=edge
    #                      fi
    #                    elif [[ $GITHUB_REF == refs/pull/* ]]; then
    #                      VERSION=pr-${{ github.event.number }}
    #                    fi
    #                    TAGS="${DOCKER_IMAGE}:${VERSION}"
    #                    if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
    #                      MINOR=${VERSION%.*}
    #                      MAJOR=${MINOR%.*}
    #                      TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
    #                    elif [ "${{ github.event_name }}" = "push" ]; then
    #                      TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
    #                    fi
    #                    echo ::set-output name=version::${VERSION}
    #                    echo ::set-output name=tags::${TAGS}
    #                    echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
    #
    #            -   name: Login to DockerHub
    #                uses: docker/login-action@master
    #                if: github.event_name != 'pull_request'
    #                with:
    #                    username: ${{ secrets.DOCKER_USERNAME }}
    #                    password: ${{ secrets.DOCKER_PASSWORD }}
    #
    #            -   name: Set up Docker Buildx
    #                uses: docker/setup-buildx-action@master
    #
    #            -   name: Build and push
    #                uses: docker/build-push-action@master
    #                id: build
    #                env:
    #                    VERSION: ${{ steps.prepare.outputs.version }}
    #                with:
    #                    push: ${{ github.event_name != 'pull_request' }}
    #                    tags: ${{ steps.prepare.outputs.tags }}
    #
    #            -   name: Image digest
    #                run: echo ${{ steps.build.outputs.digest }}

    config:
        runs-on: ubuntu-latest
        #        needs: build
        steps:
            -   name: Check out the repo
                uses: actions/checkout@master

            -   name: Deploy Configs
                uses: appleboy/scp-action@master
                with:
                    host: ${{ secrets.HOST }}
                    username: root
                    key: ${{ secrets.SSHKEY }}
                    source: "./config"
                    target: "/opt/app"
                    rm: true
#
#    deploy:
#        runs-on: ubuntu-latest
#        needs:
#            - build
#            - config
#        steps:
#            -   name: Deploy Stack
#                uses: appleboy/ssh-action@master
#                env:
#                    BACKEND_HOST: "http://${{ secrets.HOST }}:8080"
#                    VERSION: ${{ needs.build.outputs.version }}
#                with:
#                    username: root
#                    host: ${{ secrets.HOST }}
#                    key: ${{ secrets.SSHKEY }}
#                    script_stop: true
#                    envs: BACKEND_HOST,VERSION
#                    script: |
#                        cd /opt/app/deployment
#                        echo "BACKEND_HOST=$BACKEND_HOST" >> .env
#                        echo "VERSION=$VERSION" >> .env
#                        docker-compose down
#                        docker-compose pull
#                        docker-compose up -d
