name: Build

on:
    schedule:
        -   cron: '0 10 * * *'

    push:
        branches:
            - master

        tags:
            - 'v*.*.*'

    pull_request:

jobs:
    docker:
        runs-on: ubuntu-latest

        steps:
            -   name: Check out the repo
                uses: actions/checkout@v2

            -   name: Repository metadata
                uses: actions/github-script@v3
                with:
                    script: |
                        const repository = await github.repos.get(context.repo)
                        return repository.data
            -   name: Prepare
                id: prepare
                run: |
                    DOCKER_IMAGE=marekhanzal/derivean
                    VERSION=noop
                    if [ "${{ github.event_name }}" = "schedule" ]; then
                      VERSION=nightly
                    elif [[ $GITHUB_REF == refs/tags/* ]]; then
                      VERSION=${GITHUB_REF#refs/tags/}
                    elif [[ $GITHUB_REF == refs/heads/* ]]; then
                      VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
                      if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
                        VERSION=edge
                      fi
                    elif [[ $GITHUB_REF == refs/pull/* ]]; then
                      VERSION=pr-${{ github.event.number }}
                    fi
                    TAGS="${DOCKER_IMAGE}:${VERSION}"
                    if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
                      MINOR=${VERSION%.*}
                      MAJOR=${MINOR%.*}
                      TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
                    elif [ "${{ github.event_name }}" = "push" ]; then
                      TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
                    fi
                    echo ::set-output name=version::${VERSION}
                    echo ::set-output name=tags::${TAGS}
                    echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

            -   name: Login to DockerHub
                uses: docker/login-action@v1
                if: github.event_name != 'pull_request'
                with:
                    username: ${{ secrets.DOCKER_USERNAME }}
                    password: ${{ secrets.DOCKER_PASSWORD }}

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v1

            -   name: Build and push
                uses: docker/build-push-action@v2
                id: build
                env:
                    VERSION: ${{ steps.prepare.outputs.version }}
                with:
                    push: ${{ github.event_name != 'pull_request' }}
                    tags: ${{ steps.prepare.outputs.tags }}

            -   name: Image digest
                run: echo ${{ steps.build.outputs.digest }}
